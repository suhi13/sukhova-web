#------------------------------------------------------------------------------
# ECS Cluster
#------------------------------------------------------------------------------
module "ecs-cluster" {
  source    = "cn-terraform/ecs-cluster/aws"
  version   = "1.0.9"
  name      = "${var.name_prefix}-app"
  tags      = local.tags
}

#------------------------------------------------------------------------------
# ECS Task Definition
#------------------------------------------------------------------------------
module "api-definition" {
  source          = "cloudposse/ecs-container-definition/aws"
  version         = "0.58.1"
  container_name  = "container-1"
  container_image = "ubuntu-1"
}

module "frontend-definition" {
  source          = "cloudposse/ecs-container-definition/aws"
  version         = "0.58.1"
  container_name  = "container-2"
  container_image = "ubuntu-2"
}

module "td" {
  source      = "cn-terraform/ecs-fargate-task-definition/aws"
  name_prefix = "multiple-containers"

  containers = [
    module.api-definition.json_map_object,
    module.frontend-definition.json_map_object,
  ]
}

#------------------------------------------------------------------------------
# ECS Service
#------------------------------------------------------------------------------
module "ecs-fargate-service" {
  source  = "cn-terraform/ecs-fargate-service/aws"
  version                            = "2.0.24"
  name_prefix                        = "${var.name_prefix}-app"
  vpc_id                             = data.terraform_remote_state.infra.outputs.vpc.vpc_id
  ecs_cluster_arn                    = module.ecs-cluster.aws_ecs_cluster_cluster_arn
  //container_image                    = "ubuntu"
  container_name                     = "${var.name_prefix}-app"
  task_definition_arn                = module.td.aws_ecs_task_definition_td_arn
  ecs_cluster_name                   = module.ecs-cluster.aws_ecs_cluster_cluster_name

  # Network configuration block
  public_subnets   = data.terraform_remote_state.infra.outputs.vpc.public_subnets
  private_subnets  = data.terraform_remote_state.infra.outputs.vpc.private_subnets
  # Optional tags
  tags = local.tags
}
